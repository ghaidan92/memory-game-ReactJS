{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","onClick","shuffleFriends","id","className","alt","name","src","image","Wrapper","shuffle","require","App","state","friends","count","array","highScore","message","_this","console","log","includes","setState","document","getElementById","classList","add","setTimeout","remove","push","scoreFriends","_this2","this","map","friend","components_FriendCard","key","React","Component","ReactDOM","render","src_App_0"],"mappings":"69DAgBeA,MAbf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,eAAeL,EAAMM,MAE/CL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,kBCF1BC,WCFTC,SAAUC,EAAQ,KA8ETC,6MA3EbC,MAAQ,CACNC,UACAC,MAAO,EACPC,MAAO,GACPC,UAAW,EACXC,QAAS,8BAGXhB,eAAiB,SAACC,GAEhB,IAAMW,EAAUJ,EAAQS,EAAKN,MAAMC,SACnCM,QAAQC,IAAIF,EAAKN,MAAMG,OAEnBG,EAAKN,MAAMG,MAAMM,SAASnB,IACxBgB,EAAKN,MAAME,MAAQI,EAAKN,MAAMI,WAChCE,EAAKI,SAAS,CAAEN,UAAWE,EAAKN,MAAME,QAExCI,EAAKI,SAAS,CAAER,MAAO,EAAGC,MAAO,GAAIE,QAAS,aAC9CM,SAASC,eAAe,WAAWC,UAAUC,IAAI,OACjDC,WAAW,WACTJ,SAASC,eAAe,WAAWC,UAAUG,OAAO,QACnD,OAEHV,EAAKN,MAAMG,MAAMc,KAAK3B,GACtBgB,EAAKI,SAAS,CAAET,YAChBK,EAAKI,SAAS,CAAER,MAAOI,EAAKN,MAAME,MAAQ,IAC1CI,EAAKI,SAAS,CAAEL,QAAS,0BACzBM,SAASC,eAAe,WAAWC,UAAUC,IAAI,SACjDC,WAAW,WACTJ,SAASC,eAAe,WAAWC,UAAUG,OAAO,UACnD,SAWPE,aAAe,WAIbZ,EAAKI,SAAS,CAAER,MAAOI,EAAKN,MAAME,MAAQ,6EAInC,IAAAiB,EAAAC,KACP,OAEEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,GAAG,UACNL,EAAAC,EAAAC,cAAA,KAAGG,GAAG,WAAW8B,KAAKpB,MAAMK,SAC5BpB,EAAAC,EAAAC,cAAA,oBAAYiC,KAAKpB,MAAME,OACvBjB,EAAAC,EAAAC,cAAA,wBAAgBiC,KAAKpB,MAAMI,YAE7BnB,EAAAC,EAAAC,cAAA,OAAKG,GAAG,gBACP8B,KAAKpB,MAAMC,QAAQoB,IAAI,SAAAC,GAAM,OAC5BrC,EAAAC,EAAAC,cAACoC,EAAD,CACEjC,GAAIgC,EAAOhC,GACXkC,IAAKF,EAAOE,IACZ7B,MAAO2B,EAAO3B,MACdN,eAAgB8B,EAAK9B,4BAjEfoC,IAAMC,iBCAxBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASlB,SAASC,eAAe","file":"static/js/main.6c0170ac.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div onClick={() => props.shuffleFriends(props.id)}>\n    \n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\nconst shuffle = require(`shuffle-array`)\n\nclass App extends React.Component {\n  state = {\n    friends,\n    count: 0,\n    array: [],\n    highScore: 0,\n    message: \"Click any image to begin\"\n  };\n\n  shuffleFriends = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = shuffle(this.state.friends)\n    console.log(this.state.array)\n\n    if (this.state.array.includes(id)) {\n      if (this.state.count > this.state.highScore) {\n        this.setState({ highScore: this.state.count })\n      }\n      this.setState({ count: 0, array: [], message: \"You lose\" })\n      document.getElementById(\"message\").classList.add(\"red\")\n      setTimeout(() => {\n        document.getElementById(\"message\").classList.remove(\"red\")\n      }, 800);\n    } else {\n      this.state.array.push(id)\n      this.setState({ friends });\n      this.setState({ count: this.state.count + 1 });\n      this.setState({ message: \"you guessed correctly\" })\n      document.getElementById(\"message\").classList.add(\"green\")\n      setTimeout(() => {\n        document.getElementById(\"message\").classList.remove(\"green\")\n      }, 800);\n\n    }\n\n\n\n    // Set this.state.friends equal to the new friends array\n\n\n\n  };\n  scoreFriends = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n\n    // Set this.state.friends equal to the new friends array\n    this.setState({ count: this.state.count + 1 });\n\n  };\n\n  render() {\n    return (\n\n      <div>\n        <div id=\"header\">\n          <p id=\"message\">{this.state.message}</p>\n          <p>Count : {this.state.count}</p>\n          <p>High Score: {this.state.highScore}</p>\n        </div>\n        <div id=\"friend-cards\">\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.key}\n            image={friend.image}\n            shuffleFriends={this.shuffleFriends}\n\n          />\n        ))}\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}